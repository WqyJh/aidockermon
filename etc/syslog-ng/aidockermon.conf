@version: 3.20

python {
import json

def return_message(log_message, msg, timestamp):
    msg = msg.decode()
    timestamp = timestamp.decode()
    data = json.loads(msg)
    data['timestamp'] = timestamp
    msg = json.dumps(data)
    return msg
};

destination d_elastic_http {
	elasticsearch2(
		index("syslog-ng-${.SDATA.meta.type}")
    type("${.SDATA.meta.type}")
		flush-limit("0")
		cluster("es-syslog-ng")
		cluster-url("http://localhost:9200")
		client-mode("http")
		client-lib-dir(/usr/share/elasticsearch/lib)
#template("${MESSAGE}\n")
    template("$(python return_message ${MESSAGE} ${ISODATE})\n")
	);
};


destination d_file {
	file(
		"/var/log/test_syslog"
#template("$(format-json --rekey .SDATA.meta.* --shift 12 --key .* timestamp=${ISODATE})\n")
    template("$(python return_message ${MESSAGE} ${ISODATE})\n")
	);
};

source s_python {
  #unix-dgram("/var/log/aidockermon");
	syslog(ip(127.0.0.1) port(1514) transport("udp") flags(no-parse));
};


log {
	source (s_python);
  parser { syslog-parser(flags(syslog-protocol)); };
	destination (d_elastic_http);
};

log {
  source (s_python);
  parser { syslog-parser(flags(syslog-protocol)); };
  destination (d_file);
};
